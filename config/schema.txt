CREATE TABLE users (
  user_id     INT AUTO_INCREMENT PRIMARY KEY,
  username    VARCHAR(50) UNIQUE NOT NULL,
  password    VARCHAR(255) NOT NULL,
  role        ENUM('student','supervisor') NOT NULL,
  full_name   VARCHAR(100) NOT NULL,
  created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE projects (
  project_id   INT AUTO_INCREMENT PRIMARY KEY,
  student_id   INT NOT NULL,
  title        VARCHAR(255) NOT NULL,
  description  TEXT,
  tools_used   VARCHAR(255),
  created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (student_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE stages (
  stage_id     INT AUTO_INCREMENT PRIMARY KEY,
  project_id   INT NOT NULL,
  name         VARCHAR(100) NOT NULL,
  due_date     DATE,
  created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (project_id) REFERENCES projects(project_id) ON DELETE CASCADE
);

CREATE TABLE uploads (
  upload_id    INT AUTO_INCREMENT PRIMARY KEY,
  stage_id     INT NOT NULL,
  file_path    VARCHAR(255) NOT NULL,
  uploaded_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (stage_id) REFERENCES stages(stage_id) ON DELETE CASCADE
);

CREATE TABLE reviews (
  review_id     INT AUTO_INCREMENT PRIMARY KEY,
  stage_id      INT NOT NULL,
  supervisor_id INT NOT NULL,
  comment       TEXT,
  grade         DECIMAL(5,2),
  reviewed_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (stage_id)      REFERENCES stages(stage_id)      ON DELETE CASCADE,
  FOREIGN KEY (supervisor_id) REFERENCES users(user_id)        ON DELETE CASCADE
);
